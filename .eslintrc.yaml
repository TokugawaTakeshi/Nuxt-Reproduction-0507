parser: "@typescript-eslint/parser"

parserOptions:
  sourceType: module
  project: tsconfig.json

plugins:

  - "@typescript-eslint"
  - vue

env:
  es6: true
  browser: true
  node: true

rules:

  "@typescript-eslint/ban-ts-comment": error
  "@typescript-eslint/no-dynamic-delete": error
  "@typescript-eslint/no-explicit-any": error
  no-control-regex: error
  "@typescript-eslint/dot-notation": error
  "@typescript-eslint/prefer-reduce-type-parameter": error
  eol-last:
    - error
    - always
  eqeqeq:
    - error
    - always
  guard-for-in: error
  no-await-in-loop: error
  no-eq-null: error
  no-eval: error
  no-implied-eval: error
  "@typescript-eslint/no-implied-eval": error
  no-labels: error
  no-script-url: error
  no-with: error
  no-delete-var: error
  "@typescript-eslint/ban-types": error
  "@typescript-eslint/explicit-member-accessibility":
    - error
    - accessibility: explicit
  "@typescript-eslint/no-for-in-array": error


  no-promise-executor-return: error
  no-unreachable-loop: error
  no-bitwise: error
  array-callback-return: error
  "@typescript-eslint/prefer-literal-enum-member": error
  "@typescript-eslint/default-param-last": error
  "@typescript-eslint/no-base-to-string": error
  "@typescript-eslint/no-invalid-this": error
  "@typescript-eslint/no-throw-literal": error
  for-direction: error
  getter-return: error
  no-async-promise-executor: error
  no-cond-assign: error
  no-debugger: error
  no-dupe-args: error
  no-dupe-else-if: error
  no-dupe-keys: error
  no-duplicate-case: error
  no-empty-character-class: error
  no-ex-assign: error
  no-func-assign: error
  no-import-assign: error
  no-invalid-regexp: error
  no-irregular-whitespace:
    - error
    - skipTemplates: true
      skipComments: true
      skipRegExps: true
  "@typescript-eslint/no-loss-of-precision": error
  no-misleading-character-class: error
  no-obj-calls: error
  no-prototype-builtins: error
  no-regex-spaces: error
  no-setter-return: error
  no-template-curly-in-string: error
  no-unreachable: error
  no-unsafe-finally: error
  require-atomic-updates: error
  use-isnan: error
  valid-typeof: error
  block-scoped-var: error
  no-fallthrough: error
  no-unmodified-loop-condition: error
  no-void: error
  radix:
    - error
    - always
  constructor-super: error
  no-const-assign: error
  no-constructor-return: error
  "@typescript-eslint/no-dupe-class-members": error
  no-duplicate-imports: error
  no-this-before-super: error
  require-yield: error
  "@typescript-eslint/no-misused-new": error
  "@typescript-eslint/no-misused-promises": error
  "@typescript-eslint/no-non-null-asserted-optional-chain": error
  "@typescript-eslint/promise-function-async": error
  "@typescript-eslint/require-array-sort-compare": error
  "@typescript-eslint/unbound-method":
    - error
    - ignoreStatic: true
  "@typescript-eslint/restrict-template-expressions":
    - error
    - allowNumber: true
      allowBoolean: true
      allowNullish: true


  no-alert: error
  no-caller: error
  no-octal: error
  no-octal-escape: error
  no-proto: error
  no-new-symbol: error
  no-var: error
  "@typescript-eslint/triple-slash-reference": error
  "@typescript-eslint/ban-tslint-comment": error


  no-global-assign: error


  "@typescript-eslint/explicit-function-return-type": error
  "@typescript-eslint/no-extra-non-null-assertion": error
  "@typescript-eslint/no-unnecessary-type-arguments": error
  "@typescript-eslint/no-extra-semi": error
  "@typescript-eslint/no-invalid-void-type": error
  "@typescript-eslint/no-unsafe-assignment": error
  "@typescript-eslint/no-unsafe-call": error
  "@typescript-eslint/no-unsafe-member-access": error
  "@typescript-eslint/no-unsafe-return": error
  "@typescript-eslint/strict-boolean-expressions": error
  no-compare-neg-zero: error
  no-constant-condition: error
  no-empty: warn
  no-sparse-arrays: error
  class-methods-use-this: warn
  no-case-declarations: error
  "@typescript-eslint/no-empty-function":
    - error
    - allow:
        # 規定関数は空に成っている事がある
        - arrowFunctions
  "@typescript-eslint/no-empty-interface": error
  no-empty-pattern: error
  no-multi-spaces: error
  "@typescript-eslint/no-unused-expressions": error
  yoda: error
  max-depth:
    - error
    - 3
  max-len:
    - warn
    - code: 130
      ignorePattern: from ['"][\w\/:@.]+['"]
  max-nested-callbacks:
    - error
    - 2
  max-params:
    - error
    - 3
  max-statements-per-line:
    - warn
    - max: 2
  no-inline-comments: warn
  no-lonely-if: error
  no-mixed-spaces-and-tabs: error
  no-whitespace-before-property: warn
  no-useless-rename: error
  no-warning-comments: warn
  "@typescript-eslint/no-floating-promises":
    - error
    - ignoreIIFE: true
  "@typescript-eslint/no-non-null-assertion": error
  "@typescript-eslint/no-parameter-properties": error
  "@typescript-eslint/no-require-imports": error
  "@typescript-eslint/no-this-alias": error
  "@typescript-eslint/no-unused-vars": error
  "@typescript-eslint/typedef":
    - error
    - arrayDestructuring: true
      arrowParameter: true
      memberVariableDeclaration: true
      objectDestructuring: true
      parameter: true
      propertyDeclaration: true
      variableDeclaration: true


  no-extra-boolean-cast: error
  no-else-return: error
  no-extra-bind: error
  no-extra-label: error
  no-iterator: error
  no-lone-blocks: error
  no-new-wrappers: error
  no-useless-call: error
  no-useless-catch: error
  no-useless-concat: error
  no-useless-escape: error
  no-useless-return: error
  no-new-object: error
  no-unneeded-ternary: error
  no-useless-backreference: error
  strict: error
  "@typescript-eslint/no-unnecessary-qualifier": error
  "@typescript-eslint/no-unnecessary-type-assertion": error
  "@typescript-eslint/no-useless-constructor": error
  "@typescript-eslint/no-extra-parens":
    - warn
    - all
    - nestedBinaryExpressions: false


  new-parens: error
  no-new: error
  no-unexpected-multiline: error
  no-unsafe-negation: error
  no-div-regex: error
  no-extend-native: error
  no-floating-decimal: error
  no-implicit-coercion: error
  no-loop-func: error
  "@typescript-eslint/no-magic-numbers":
    - error
    - ignoreReadonlyClassProperties: true
      ignoreEnums: true
      ignore:
        - -1
        - 0
        - 0.5
        - 1
        - 2
        - 100
      enforceConst: true
  no-new-func: error
  no-param-reassign: error
  no-return-assign: error
  no-return-await: error
  no-self-assign: error
  no-self-compare: error
  no-sequences: error
  require-unicode-regexp: error
  "@typescript-eslint/no-shadow": error
  no-shadow-restricted-names: error
  no-undefined: error
  "@typescript-eslint/no-use-before-define":
    - error
    - functions: false
      typedefs: false
  no-mixed-operators:
    - error
  no-multi-assign: error
  no-nested-ternary: error
  no-class-assign: error
  no-confusing-arrow: error
  no-useless-computed-key: error
  prefer-const: error
  prefer-numeric-literals: error
  "@typescript-eslint/await-thenable": error
  "@typescript-eslint/restrict-plus-operands": error
  "@typescript-eslint/unified-signatures": error
  "@typescript-eslint/require-await": error
  "@typescript-eslint/no-confusing-non-null-assertion": error


  operator-linebreak:
    - warn
    - after
  function-call-argument-newline:
    - error
    - consistent
  "@typescript-eslint/brace-style":
    - warn
    - 1tbs
    - allowSingleLine: true
  curly:
    - error
    - all
  wrap-iife:
    - error
    - inside
  array-bracket-spacing:
    - warn
    - always
  block-spacing:
    - warn
    - always
  comma-dangle:
    - warn
    - never
  "@typescript-eslint/comma-spacing": warn
  computed-property-spacing:
    - warn
    - never
  dot-location:
    - error
    - object
  "@typescript-eslint/func-call-spacing": warn
  key-spacing: warn
  "@typescript-eslint/keyword-spacing": warn
  newline-per-chained-call:
    - warn
    - ignoreChainWithDepth: 2
  "@typescript-eslint/no-array-constructor": error
  "@typescript-eslint/prefer-nullish-coalescing": error
  "@typescript-eslint/prefer-optional-chain": error
  no-multiple-empty-lines:
    - warn
    - max: 2
      maxBOF: 0
      maxEOF: 1
  no-tabs: warn
  object-curly-spacing:
    - warn
    - always
  prefer-object-spread: warn
  quote-props:
    - error
    - as-needed

  "quotes": off
  "@typescript-eslint/quotes":
    - error
    - double
    - avoidEscape: true

  "semi": off
  "@typescript-eslint/semi": error
  semi-spacing: warn
  semi-style: warn
  space-before-blocks: warn
  "@typescript-eslint/space-before-function-paren":
    - warn
    - never
  space-in-parens:
    - warn
    - never
  space-infix-ops: warn
  space-unary-ops:
    - warn
    - words: true
      nonwords: false
  spaced-comment:
    - warn
    - always
  switch-colon-spacing: warn
  template-tag-spacing:
    - warn
    - never
  arrow-body-style:
    - warn
    - as-needed
  arrow-parens: warn
  arrow-spacing: warn
  generator-star-spacing: warn
  object-shorthand:
    - warn
    - always
    - avoidQuotes: true
      avoidExplicitReturnArrows: true
  prefer-arrow-callback: warn
  prefer-rest-params: warn
  prefer-spread: warn
  prefer-template: warn
  rest-spread-spacing:
    - warn
    - never
  symbol-description: error
  template-curly-spacing:
    - warn
    - never
  yield-star-spacing: warn
  "@typescript-eslint/array-type":
    - warn
    - default: generic
  "@typescript-eslint/consistent-type-assertions":
    - warn
    - assertionStyle: as
  "@typescript-eslint/member-delimiter-style":
    - warn
    - multiline:
        delimiter: semi
        requireLast: true
      singleline:
        delimiter: semi
        requireLast: true
  "@typescript-eslint/no-var-requires": error
  "@typescript-eslint/prefer-for-of": error
  "@typescript-eslint/prefer-includes": warn
  "@typescript-eslint/prefer-regexp-exec": warn
  "@typescript-eslint/prefer-string-starts-ends-with": warn
  comma-style:
    - error
    - last


  operator-assignment:
    - error
    - never
  one-var:
    - error
    - never
  object-property-newline:
    - warn
    - allowAllPropertiesOnSameLine: true
  object-curly-newline:
    - warn
    - consistent: true
  no-negated-condition: warn

  "@typescript-eslint/class-literal-property-style": error
  "@typescript-eslint/no-extraneous-class":
    - error
    - allowStaticOnly: true
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": error
  "@typescript-eslint/no-unnecessary-condition": error
  default-case-last: error
  grouped-accessor-pairs:
    - warn
    - getBeforeSet
  max-classes-per-file: error
  prefer-named-capture-group: error
  prefer-promise-reject-errors: error
  no-undef-init: error
  "@typescript-eslint/adjacent-overload-signatures": warn
  "@typescript-eslint/member-ordering":
    - warn
    - default:
        - public-static-field
        - protected-static-field
        - private-static-field
        - public-instance-field
        - protected-instance-field
        - private-instance-field
        - public-abstract-field
        - protected-abstract-field
        - private-abstract-field
        - public-static-method
        - constructor
        - public-instance-method
        - protected-instance-method
        - private-instance-method
        - protected-static-method
        - private-static-method
  "@typescript-eslint/prefer-readonly": warn
  "@typescript-eslint/type-annotation-spacing": warn


overrides:

  - files: [ "*.vue" ]

    parser: "vue-eslint-parser"

    parserOptions:
      parser: "@typescript-eslint/parser"
      project: tsconfig.json
      extraFileExtensions: [ ".vue" ]
      tsconfigRootDir: ./

    rules:

      max-len:
        - warn
        - code: 130
          ignorePattern: ((src|href)=|from ['"][\w\/:@.-]+['"])

      indent: off
      vue/script-indent:
        - warn
        - 2
        - baseIndent: 1

      class-methods-use-this: off
      "@typescript-eslint/member-ordering": off

  - files: [ "*.vue.ts" ]

    rules:

      class-methods-use-this: off
      "@typescript-eslint/member-ordering": off

  - files: [ "Store/**/*.ts", "*.vuex.ts" ]
    rules:
      class-methods-use-this: off
      "@typescript-eslint/member-ordering": off

  - files: [ "*.test.ts" ]
    rules:
      "@typescript-eslint/explicit-member-accessibility": off
      "class-methods-use-this": off
      max-nested-callbacks: off


globals:
  __IS_DEVELOPMENT_BUILDING_MODE__: readonly
  __IS_TESTING_BUILDING_MODE__: readonly
  __IS_PRODUCTION_BUILDING_MODE__: readonly
